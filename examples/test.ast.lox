RefCell { value: Environment { is_loop: false, enclosing: None, values: {"clock": Function(<native fn>)} } }
Print(
    FunctionCall(
        Variable(
            Token {
                token_type: IDENTIFIER,
                lexeme: "clock",
                literal: None,
                position: Position {
                    line: 3,
                    column: 12,
                },
            },
        ),
        Token {
            token_type: RIGHT_PAREN,
            lexeme: ")",
            literal: None,
            position: Position {
                line: 3,
                column: 14,
            },
        },
        [],
    ),
)
Let(
    Token {
        token_type: IDENTIFIER,
        lexeme: "a",
        literal: None,
        position: Position {
            line: 5,
            column: 6,
        },
    },
    Some(
        Literal(
            Number(
                0.0,
            ),
        ),
    ),
)
While(
    Binary(
        Variable(
            Token {
                token_type: IDENTIFIER,
                lexeme: "a",
                literal: None,
                position: Position {
                    line: 7,
                    column: 8,
                },
            },
        ),
        Token {
            token_type: LESS,
            lexeme: "<",
            literal: None,
            position: Position {
                line: 7,
                column: 10,
            },
        },
        Literal(
            Number(
                100000.0,
            ),
        ),
    ),
    Block(
        [
            Expression(
                Assign(
                    Token {
                        token_type: IDENTIFIER,
                        lexeme: "a",
                        literal: None,
                        position: Position {
                            line: 9,
                            column: 4,
                        },
                    },
                    Binary(
                        Variable(
                            Token {
                                token_type: IDENTIFIER,
                                lexeme: "a",
                                literal: None,
                                position: Position {
                                    line: 9,
                                    column: 8,
                                },
                            },
                        ),
                        Token {
                            token_type: PLUS,
                            lexeme: "+",
                            literal: None,
                            position: Position {
                                line: 9,
                                column: 10,
                            },
                        },
                        Literal(
                            Number(
                                1.0,
                            ),
                        ),
                    ),
                ),
            ),
        ],
    ),
)
Print(
    FunctionCall(
        Variable(
            Token {
                token_type: IDENTIFIER,
                lexeme: "clock",
                literal: None,
                position: Position {
                    line: 13,
                    column: 12,
                },
            },
        ),
        Token {
            token_type: RIGHT_PAREN,
            lexeme: ")",
            literal: None,
            position: Position {
                line: 13,
                column: 14,
            },
        },
        [],
    ),
)
Print(
    Literal(
        String(
            "for",
        ),
    ),
)
Block(
    [
        Let(
            Token {
                token_type: IDENTIFIER,
                lexeme: "i",
                literal: None,
                position: Position {
                    line: 21,
                    column: 11,
                },
            },
            Some(
                Literal(
                    Number(
                        0.0,
                    ),
                ),
            ),
        ),
        While(
            Binary(
                Variable(
                    Token {
                        token_type: IDENTIFIER,
                        lexeme: "i",
                        literal: None,
                        position: Position {
                            line: 21,
                            column: 18,
                        },
                    },
                ),
                Token {
                    token_type: LESS_EQUAL,
                    lexeme: "<=",
                    literal: None,
                    position: Position {
                        line: 21,
                        column: 20,
                    },
                },
                Literal(
                    Number(
                        10.0,
                    ),
                ),
            ),
            Block(
                [
                    Block(
                        [
                            If(
                                Logical(
                                    Binary(
                                        Variable(
                                            Token {
                                                token_type: IDENTIFIER,
                                                lexeme: "i",
                                                literal: None,
                                                position: Position {
                                                    line: 23,
                                                    column: 7,
                                                },
                                            },
                                        ),
                                        Token {
                                            token_type: EQUAL_EQUAL,
                                            lexeme: "==",
                                            literal: None,
                                            position: Position {
                                                line: 23,
                                                column: 9,
                                            },
                                        },
                                        Literal(
                                            Number(
                                                2.0,
                                            ),
                                        ),
                                    ),
                                    Token {
                                        token_type: OR,
                                        lexeme: "or",
                                        literal: None,
                                        position: Position {
                                            line: 23,
                                            column: 14,
                                        },
                                    },
                                    Binary(
                                        Variable(
                                            Token {
                                                token_type: IDENTIFIER,
                                                lexeme: "i",
                                                literal: None,
                                                position: Position {
                                                    line: 23,
                                                    column: 16,
                                                },
                                            },
                                        ),
                                        Token {
                                            token_type: EQUAL_EQUAL,
                                            lexeme: "==",
                                            literal: None,
                                            position: Position {
                                                line: 23,
                                                column: 18,
                                            },
                                        },
                                        Literal(
                                            Number(
                                                3.0,
                                            ),
                                        ),
                                    ),
                                ),
                                Block(
                                    [
                                        Continue(
                                            Token {
                                                token_type: SEMICOLON,
                                                lexeme: ";",
                                                literal: None,
                                                position: Position {
                                                    line: 25,
                                                    column: 14,
                                                },
                                            },
                                        ),
                                    ],
                                ),
                                None,
                            ),
                            Print(
                                Variable(
                                    Token {
                                        token_type: IDENTIFIER,
                                        lexeme: "i",
                                        literal: None,
                                        position: Position {
                                            line: 29,
                                            column: 10,
                                        },
                                    },
                                ),
                            ),
                            If(
                                Binary(
                                    Variable(
                                        Token {
                                            token_type: IDENTIFIER,
                                            lexeme: "i",
                                            literal: None,
                                            position: Position {
                                                line: 31,
                                                column: 7,
                                            },
                                        },
                                    ),
                                    Token {
                                        token_type: GREATER_EQUAL,
                                        lexeme: ">=",
                                        literal: None,
                                        position: Position {
                                            line: 31,
                                            column: 9,
                                        },
                                    },
                                    Literal(
                                        Number(
                                            5.0,
                                        ),
                                    ),
                                ),
                                Block(
                                    [
                                        Break(
                                            Token {
                                                token_type: SEMICOLON,
                                                lexeme: ";",
                                                literal: None,
                                                position: Position {
                                                    line: 33,
                                                    column: 11,
                                                },
                                            },
                                        ),
                                    ],
                                ),
                                Some(
                                    Block(
                                        [],
                                    ),
                                ),
                            ),
                        ],
                    ),
                    Expression(
                        Assign(
                            Token {
                                token_type: IDENTIFIER,
                                lexeme: "i",
                                literal: None,
                                position: Position {
                                    line: 21,
                                    column: 26,
                                },
                            },
                            Binary(
                                Variable(
                                    Token {
                                        token_type: IDENTIFIER,
                                        lexeme: "i",
                                        literal: None,
                                        position: Position {
                                            line: 21,
                                            column: 30,
                                        },
                                    },
                                ),
                                Token {
                                    token_type: PLUS,
                                    lexeme: "+",
                                    literal: None,
                                    position: Position {
                                        line: 21,
                                        column: 32,
                                    },
                                },
                                Literal(
                                    Number(
                                        1.0,
                                    ),
                                ),
                            ),
                        ),
                    ),
                ],
            ),
        ),
    ],
)